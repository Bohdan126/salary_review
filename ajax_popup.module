<?php

/**
 * @file
 * Hooks for ajax_popup module.
 */

use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\CloseModalDialogCommand;
use Drupal\Core\Ajax\RemoveCommand;
use Drupal\Core\Ajax\ReplaceCommand;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;
use Drupal\views\Views;

/**
 * Implements hook_views_data_alter().
 */
function ajax_popup_views_data_alter(array &$data) {
  $data['node']['ajax_edit_node'] = [
    'title' => t('Ajax edit node'),
    'field' => [
      'title' => t('Ajax edit node'),
      'help' => t('Provide an edit link to the Content by using ajax.'),
      'id' => 'ajax_entity_link_edit',
    ],
  ];

  $data['node']['ajax_delete_node'] = [
    'title' => t('Ajax delete node'),
    'field' => [
      'title' => t('Ajax delete node'),
      'help' => t('Provide a delete link to the Content by using ajax.'),
      'id' => 'ajax_entity_link_delete',
    ],
  ];
}

/**
 * Implements hook_form_alter().
 */
function ajax_popup_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id === 'node_article_delete_form' && !empty($_GET['modal'])) {
    $form['actions']['cancel'] = [
      '#type' => 'button',
      '#name' => 'cancel',
      '#value' => t('Cancel'),
      '#weight' => 10,
      '#limit_validation_errors' => [],
      '#ajax' => [
        'callback' => 'ajax_popup_close_dialog',
      ],
    ];

    $form['actions']['submit']['#ajax']['callback'] = 'ajax_popup_delete_node';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ajax_popup_form_node_form_alter(&$form, FormStateInterface $form_state) {
  if (!empty($_GET['modal'])) {
    unset($form['actions']['delete']);

    if (isset($form['actions']['preview'])) {
      unset($form['actions']['preview']);
    }

    $form['actions']['cancel'] = [
      '#type' => 'button',
      '#name' => 'cancel',
      '#value' => t('Cancel'),
      '#weight' => 10,
      '#limit_validation_errors' => [],
      '#ajax' => [
        'callback' => 'ajax_popup_close_dialog',
      ],
    ];

    $form['actions']['submit']['#ajax']['callback'] = 'ajax_popup_save_node';
  }
}

/**
 * Function to save node using ajax.
 */
function ajax_popup_save_node($form, FormStateInterface $form_state) {
  /** @var \Drupal\node\NodeInterface $node */
  $node = $form_state->getFormObject()->getEntity();
  $response = new AjaxResponse();
  $response->addCommand(new CloseModalDialogCommand());

  $new_link = $node->toLink()->toRenderable();
  $response->addCommand(new ReplaceCommand(".node-row-{$node->id()} .views-field-title a", $new_link));

  return $response;
}

/**
 * Function to delete node using ajax.
 */
function ajax_popup_delete_node($form, FormStateInterface $form_state) {
  /** @var \Drupal\node\NodeInterface $node */
  $node = $form_state->getFormObject()->getEntity();
  //$new_link = $node->toLink()->toRenderable();
  //$views_url = Url::fromRoute('view.ajax_form.page_1');
  //$views_url->setRouteParameter('page','1');
  $view = views_embed_view('ajax_nodes', 'page_1');
  //$view["#arguments"] = $views_url;
  //$view['#url'] = $views_url;
  $b = 3;
  $view["#arguments"] = [
    'page' => '1',
  ];

  //$view['#path'] = $new_link;
  /*$view["#arguments"] = [
    '#url' => '/ajax-nodes?modal=1&_wrapper_format=drupal_ajax&ajax_form=1&page=1',
    '#path' => '/ajax-nodes?modal=1&_wrapper_format=drupal_ajax&ajax_form=1&page=1',
  ];*/

  //$view['#url'] = $new_link;
  //$view["#arguments"] = $new_link;
  //$list = \Drupal::entityManager()->getListBuilder('view')->render();
  /** @var \Drupal\Core\Render\RendererInterface $renderer */
  //$renderer = \Drupal::service('renderer');
  //$output = $renderer->renderRoot($view);
  //$current_uri = \Drupal::request()->getRequestUri();
  /*$a = Views::getView('ajax_nodes');
  $view_builder = \Drupal::entityTypeManager()->getViewBuilder('node');
  $render_array = $view_builder->view($node, 'full');*/


  $response = new AjaxResponse();
  $response->addCommand(new CloseModalDialogCommand());
  $response->addCommand(new RemoveCommand(".node-row-{$node->id()}"));
  $response->addCommand(new ReplaceCommand(".view-ajax-nodes", $view));
  //$response->addCommand(new ReplaceCommand(".view-ajax-nodes", $node));


  return $response;
}

/**
 * Function to close dialog using ajax.
 */
function ajax_popup_close_dialog($form, FormStateInterface $form_state) {
  $response = new AjaxResponse();
  $response->addCommand(new CloseModalDialogCommand());

  return $response;
}
